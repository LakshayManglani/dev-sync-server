services:
  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/db

  redis-db:
    container_name: redis-db
    image: redis:latest
    ports:
      - 6379:6379

  kafka-broker:
    image: apache/kafka-native:3.8.0
    container_name: kafka-broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP}:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    env_file:
      - .env

  api-gateway:
    image: api-gateway:development
    container_name: api-gateway
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - redis-db
    volumes:
      - ./services/api-gateway:/usr/src/app
      - /usr/src/app/node_modules

  email-service:
    image: email-service:development
    container_name: email-service
    environment:
      - KAFKA_CLIENT_ID=email-service
    env_file:
      - .env
    depends_on:
      - kafka-broker
    volumes:
      - ./services/email-service:/usr/src/app
      - /usr/src/app/node_modules

  auth-service:
    image: auth-service:development
    container_name: auth-service
    environment:
      - PORT=3000
      - KAFKA_CLIENT_ID=auth-service
      - DB_NAME=auth
    env_file:
      - .env
    depends_on:
      - mongo-db
      - redis-db
      - kafka-broker
    volumes:
      - ./services/auth-service:/usr/src/app
      - /usr/src/app/node_modules

  user-service:
    image: user-service:development
    container_name: user-service
    environment:
      - PORT=3000
      - KAFKA_CLIENT_ID=user-service
      - DB_NAME=user
    env_file:
      - .env
    depends_on:
      - mongo-db
      - kafka-broker
      - redis-db
    volumes:
      - ./services/user-service:/usr/src/app
      - /usr/src/app/node_modules

  connection-service:
    image: connection-service:development
    container_name: connection-service
    environment:
      - PORT=3000
      - KAFKA_CLIENT_ID=connection-service
      - DB_NAME=connection
    env_file:
      - .env
    depends_on:
      - mongo-db
      - kafka-broker
      - redis-db
    volumes:
      - ./services/connection-service:/usr/src/app
      - /usr/src/app/node_modules
